#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January?
SELECT count(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'

#2. How many of those orders were for an iPhone?
SELECT count(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone'

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT distinct(acctnum)
FROM BIT_DB.customers Cus
INNER JOIN BIT_DB.FebSales Feb
ON Cus.order_id = Feb.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID'

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT distinct Product, min(price)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY product , price
ORDER BY price ASC
Limit 1

#5. What is the total revenue for each product sold in January?
SELECT product, sum (Quantity) *price As Revenue
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, sum(Quantity), sum (Quantity)*price As Revenue
FROM BIT_DB.FebSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT count(distinct Cus.acctnum) AS num_customers , AVG(Quantity*price) AS Average_spent
FROM BIT_DB.FebSales Feb
INNER JOIN customers Cus
ON Feb.orderID = Cus.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Feb.Quantity > 2

#8 List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, sum(Quantity) AS Total_Sold
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product
ORDER BY Total_Sold
